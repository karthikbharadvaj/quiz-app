type ObjectWithStringKeys = { [key: string]: any };

function simpleMerge(target: ObjectWithStringKeys, source: ObjectWithStringKeys): ObjectWithStringKeys {
  return Object.keys({ ...target, ...source }).reduce((merged: ObjectWithStringKeys, key: string) => {
    merged[key] = 
      target[key] && source[key] && typeof target[key] === 'object' && typeof source[key] === 'object'
        ? simpleMerge(target[key], source[key])
        : (key in target ? target[key] : source[key]);
    return merged;
  }, {});
}

// Example usage
const exampleData: ObjectWithStringKeys = { 
  name: "tim", 
  age: 22, 
  address: { country: "japan", city: "tokyo" } 
};

const exampleDefaults: ObjectWithStringKeys = { 
  age: 18, 
  address: { country: "mexico", zip: "12345678" } 
};

const result = simpleMerge(exampleData, exampleDefaults);
console.log(result);
