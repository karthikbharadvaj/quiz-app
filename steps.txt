import QRCode from 'qrcode';
import React, { useEffect, useState } from 'react';

/**
 * Custom hook to generate QR code data URL
 * @param referenceNumber - The reference number to encode in the QR code
 * @returns The generated QR code data URL or an empty string
 */
const useQRCode = (referenceNumber: string | undefined): string => {
  const [qrCodeDataURL, setQRCodeDataURL] = useState<string>('');

  useEffect(() => {
    const generateQRCode = async () => {
      if (referenceNumber) {
        try {
          const dataURL = await QRCode.toDataURL(referenceNumber, {
            errorCorrectionLevel: 'high',
            type: 'image/png',
          });
          setQRCodeDataURL(dataURL);
        } catch (error) {
          console.error('Error generating QR code:', error);
          setQRCodeDataURL('');
        }
      } else {
        setQRCodeDataURL('');
      }
    };

    generateQRCode();
  }, [referenceNumber]);

  return qrCodeDataURL;
};

// Interface as defined in a different file
interface IdentityProp {
  qr: string;
  procedureCode?: string;
}

// Example usage
const ExampleComponent: React.FC<{ referenceNumber: string | undefined }> = ({ referenceNumber }) => {
  const qrCodeDataURL = useQRCode(referenceNumber);

  return (
    <div>
      <IdentityProp
        qr={qrCodeDataURL}
        procedureCode={referenceNumber}
      />
      {qrCodeDataURL && <img src={qrCodeDataURL} alt="QR Code" />}
    </div>
  );
};

export { useQRCode, ExampleComponent };
