import { Request, Response } from 'express';
import { DeleteIdentificationAftConnectionDataUseCase } from '../useCases/deleteIdentificationAftConnectionDataUseCase';
import { ReferenceNumberRepository } from '../repositories/referenceNumberRepository';
import { IdentificationAftConnectionDataRepository } from '../repositories/identificationAftConnectionDataRepository';
import { NotFoundError } from '../errors/notFoundError';

const referenceNumberRepository = new ReferenceNumberRepository();
const identificationAftConnectionDataRepository = new IdentificationAftConnectionDataRepository();

const deleteIdentificationAftConnectionDataUseCase = new DeleteIdentificationAftConnectionDataUseCase(
  referenceNumberRepository,
  identificationAftConnectionDataRepository
);

export class IdentificationAftConnectionDataController {
  static async deleteIdentificationAftConnectionData(req: Request, res: Response) {
    try {
      const { identifiNum, coopItem1 } = req.body; // Assuming both are passed in the request body

      // Execute the delete use case
      await deleteIdentificationAftConnectionDataUseCase.execute(identifiNum, coopItem1);

      // Send a success response
      res.status(200).json({ message: 'Data deleted successfully' });
    } catch (error) {
      if (error instanceof NotFoundError) {
        // Handle NotFoundError (custom error defined in the use case)
        res.status(404).json({ error: error.message });
      } else {
        // Handle general server errors
        res.status(500).json({ error: 'Internal Server Error' });
      }
    }
  }
}